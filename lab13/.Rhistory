plotOutput("taxonPlot"))
)
)
# define a server for the Shiny app
server <- function(input, output, session) {
# this stops the app upon closing
session$onSessionEnded(stopApp)
# fill in the spot we created for a plot
output$taxonPlot <- renderPlot({
homerange %>%
filter(taxon == input$taxon) %>%
ggplot(aes(x=log10.hra)) +
geom_density(color="black", fill="red", alpha=0.6)
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_depth_mm"),
sliderInput("pointsize", "Select the Point Size", min = 0.5, max = 3, value = 1, step = 0.5),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(penguins, aes_string(x = input$x, y = input$y, color="species")) +
geom_point(size=input$pointsize) +
theme_light()
})
}
shinyApp(ui, server)
ucadmit <- readr::read_csv("data/UC_admit.csv")
ucadmit <- readr::read_csv("data/UC_admit.csv")
summary(ucadmit)
ucadmit <- readr::read_csv("data/UC_admit.csv")
summary(ucadmit)
table(ucadmit)
ucadmit <- readr::read_csv("data/UC_admit.csv")
summary(ucadmit)
glimpse(ucadmit)
ucadmit <- readr::read_csv("data/UC_admit.csv")
lapply(ucadmit)
ucadmit <- readr::read_csv("data/UC_admit.csv")
ucadmit %>%
lapply()
ucadmit <- readr::read_csv("data/UC_admit.csv")
summary(ucadmit)
View(ucadmit)
ucadmit %>%
filter(!Ethnicity == "All")
ucadmit %>%
filter(!Ethnicity == "All")
ui <- dashboardPage(
dashboardHeader(title = "UC Campus Admissions by Ethnicity 2010-2019"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
),
box(title = "UC Admissions", width = 7,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=reorder(Ethnicity, FilteredCountFR), y=FilteredCountFR)) +
geom_col(color="black", fill="steelblue", alpha=0.75) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Ethnicity", y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity 2010-2019"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
),
box(title = "UC Admissions", width = 7,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ucadmit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=reorder(Ethnicity, FilteredCountFR), y=FilteredCountFR)) +
geom_col(color="black", fill="steelblue", alpha=0.75) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Ethnicity", y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity 2010-2019"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot", width = 3,
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admission Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
),
box(title = "UC Admissions", width = 7,
plotOutput("plot", width = "400px", height = "400px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ucadmit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=reorder(Ethnicity, FilteredCountFR), y=FilteredCountFR)) +
geom_col(color="black", fill="steelblue", alpha=0.75) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Ethnicity", y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity 2010-2019"),
dashboardSidebar(),
dashboardBody(),
fluidRow(
box(title = "Plot", width = 3,
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admission Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
),
box(title = "UC Admissions", width = 7,
plotOutput("plot", width = "400px", height = "400px")
)
)
)
)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity 2010-2019"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot", width = 3,
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admission Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
),
box(title = "UC Admissions", width = 7,
plotOutput("plot", width = "400px", height = "400px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ucadmit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=reorder(Ethnicity, FilteredCountFR), y=FilteredCountFR)) +
geom_col(color="black", fill="steelblue", alpha=0.75) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Ethnicity", y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity 2010-2019"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot", width = 3,
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admission Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
),
box(title = "UC Admissions", width = 7,
plotOutput("plot", width = "400px", height = "400px")
)
server <- function(input, output, session) {
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity 2010-2019"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot", width = 3,
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admission Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
),
box(title = "UC Admissions", width = 7,
plotOutput("plot", width = "400px", height = "400px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ucadmit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=reorder(Ethnicity, FilteredCountFR), y=FilteredCountFR)) +
geom_col(color="black", fill="steelblue", alpha=0.75) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Ethnicity", y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity 2010-2019"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot", width = 3,
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admission Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
),
box(title = "UC Admissions", width = 7,
plotOutput("plot", width = "400px", height = "400px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ucadmit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=reorder(Ethnicity, FilteredCountFR), y=FilteredCountFR)) +
geom_col(color="black", fill="steelblue", alpha=0.75) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Ethnicity", y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity 2010-2019"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot", width = 3,
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"), selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"), selected = "Davis"),
selectInput("z", "Select Admission Category", choices = c("Applicants", "Admits", "Enrollees"), selected = "Applicants")),
box(title = "UC Admissions", width = 7,
plotOutput("plot", width = "400px", height = "400px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ucadmit %>%
filter(Academic_Yr==input$x, Campus==input$y, Category==input$z) %>%
ggplot(aes(x=reorder(Ethnicity, FilteredCountFR), y=FilteredCountFR)) +
geom_col(color="black", fill="navyblue", alpha=0.7) +
theme_light(base_size = 20) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Ethnicity", y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity 2010-2019"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot", width = 3,
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"), selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"), selected = "Davis"),
selectInput("z", "Select Admission Category", choices = c("Applicants", "Admits", "Enrollees"), selected = "Applicants")),
box(title = "UC Admissions", width = 7,
plotOutput("plot", width = "400px", height = "400px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ucadmit %>%
filter(Academic_Yr==input$x, Campus==input$y, Category==input$z) %>%
ggplot(aes(x=reorder(Ethnicity, FilteredCountFR), y=FilteredCountFR)) +
geom_col(color="black", fill="navyblue", alpha=0.5) +
theme_light(base_size = 20) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Ethnicity", y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity 2010-2019"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot", width = 3,
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"), selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"), selected = "Davis"),
selectInput("z", "Select Admission Category", choices = c("Applicants", "Admits", "Enrollees"), selected = "Applicants")),
box(title = "UC Admissions", width = 7,
plotOutput("plot", width = "400px", height = "400px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ucadmit %>%
filter(Academic_Yr==input$x, Campus==input$y, Category==input$z) %>%
ggplot(aes(x=reorder(Ethnicity, FilteredCountFR), y=FilteredCountFR)) +
geom_col(color="black", fill="navyblue", alpha=0.5) +
theme_light(base_size = 20) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Ethnicity", y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ucadmit <- ucadmit %>%
filter(!Ethnicity == "All")
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity 2010-2019"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot", width = 3,
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"), selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"), selected = "Davis"),
selectInput("z", "Select Admission Category", choices = c("Applicants", "Admits", "Enrollees"), selected = "Applicants")),
box(title = "UC Admissions", width = 7,
plotOutput("plot", width = "400px", height = "400px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ucadmit %>%
filter(Academic_Yr==input$x, Campus==input$y, Category==input$z) %>%
ggplot(aes(x=reorder(Ethnicity, FilteredCountFR), y=FilteredCountFR)) +
geom_col(color="black", fill="navyblue", alpha=0.5) +
theme_light(base_size = 20) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Ethnicity", y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ucadmit$Academic_Yr <- as.factor(ucadmit$Academic_Yr)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity and Year"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plots", width = 3,
radioButtons("y", "Select Ethnicity", choices = c("International", "Unknown", "White", "Asian", "Chicano/Latino", "American Indian", "African American"), selected = "International"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"), selected = "Davis"),
selectInput("z", "Select Admission Category", choices = c("Applicants", "Admits", "Enrollees"), selected = "Applicants")),
box(title = "UC Admissions", width = 7,
plotOutput("plot", width = "400px", height = "400px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ucadmit %>%
filter(Campus==input$x & Ethnicity==input$y & Category==input$z) %>%
ggplot(aes(x=Academic_Yr, y=FilteredCountFR)) +
geom_col(color="black", fill="navyblue", alpha=0.5) +
theme_light(base_size = 20) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Year", y = "Enrollment")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ucadmit$Academic_Yr <- as.factor(ucadmit$Academic_Yr)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity and Year"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plots", width = 3,
radioButtons("y", "Select Ethnicity", choices = c("International", "Unknown", "White", "Asian", "Chicano/Latino", "American Indian", "African American"), selected = "International"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"), selected = "Davis"),
selectInput("z", "Select Admission Category", choices = c("Applicants", "Admits", "Enrollees"), selected = "Applicants")),
box(title = "UC Admissions", width = 7,
plotOutput("plot", width = "400px", height = "400px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ucadmit %>%
filter(Campus==input$x, Ethnicity==input$y, Category==input$z) %>%
ggplot(aes(x=Academic_Yr, y=FilteredCountFR)) +
geom_col(color="black", fill="navyblue", alpha=0.5) +
theme_light(base_size = 20) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Year", y = "Enrollment")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ucadmit$Academic_Yr <- as.factor(ucadmit$Academic_Yr)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity and Year"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plots", width = 3,
radioButtons("y", "Select Ethnicity", choices = c("International", "Unknown", "White", "Asian", "Chicano/Latino", "American Indian", "African American"), selected = "International"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"), selected = "Davis"),
selectInput("z", "Select Admission Category", choices = c("Applicants", "Admits", "Enrollees"), selected = "Applicants")),
box(title = "UC Admissions", width = 7,
plotOutput("plot", width = "400px", height = "400px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ucadmit %>%
filter(Campus==input$x, Ethnicity==input$y, Category==input$z) %>%
ggplot(aes(x=Academic_Yr, y=FilteredCountFR)) +
geom_col(color="black", fill="navyblue", alpha=0.5) +
theme_light(base_size = 20) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Year", y = "Enrollment")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ucadmit$Academic_Yr <- as.factor(ucadmit$Academic_Yr)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity and Year"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plots", width = 3,
radioButtons("y", "Select Ethnicity", choices = c("International", "Unknown", "White", "Asian", "Chicano/Latino", "American Indian", "African American"), selected = "International"),
selectInput("x", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"), selected = "Davis"),
selectInput("z", "Select Admission Category", choices = c("Applicants", "Admits", "Enrollees"), selected = "Applicants")),
box(title = "UC Admissions", width = 7,
plotOutput("plot", width = "400px", height = "400px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ucadmit %>%
filter(Campus==input$x, Ethnicity==input$y, Category==input$z) %>%
ggplot(aes(x=Academic_Yr, y=FilteredCountFR)) +
geom_col(color="black", fill="navyblue", alpha=0.5) +
theme_light(base_size = 20) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Year", y = "Enrollment")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
